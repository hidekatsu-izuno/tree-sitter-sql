================================================================================
Complex arithmetic precedence
================================================================================

SELECT 2 + 3 * 4;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (binary_expression
            (binary_expression
              (integer)
              (integer))
            (integer)))))))

================================================================================
String concatenation vs arithmetic
================================================================================

SELECT 'a' || 'b' + 'c';

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (binary_expression
            (string)
            (binary_expression
              (string)
              (string))))))))

================================================================================
Comparison vs logical operators
================================================================================

SELECT 1 = 1 AND 2 > 1;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (binary_expression
            (binary_expression
              (integer)
              (binary_expression
                (integer)
                (integer)))
            (integer)))))))

================================================================================
Bitwise operations precedence
================================================================================

SELECT 8 >> 1 & 3;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (binary_expression
            (binary_expression
              (integer)
              (integer))
            (integer)))))))

================================================================================
Complex mixed precedence
================================================================================

SELECT 1 + 2 * 3 = 7 AND 4 | 2 & 1;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (binary_expression
            (binary_expression
              (integer)
              (integer))
            (binary_expression
              (binary_expression
                (binary_expression
                  (integer)
                  (binary_expression
                    (integer)
                    (integer)))
                (integer))
              (integer))))))))

================================================================================
LIKE vs AND precedence
================================================================================

SELECT * FROM t WHERE a LIKE 'x%' AND b = 1;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list)
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))
      (where_clause
        (binary_expression
          (binary_expression
            (qualified_identifier
              (identifier))
            (binary_expression
              (string)
              (qualified_identifier
                (identifier))))
          (integer))))))

================================================================================
IS vs AND precedence
================================================================================

SELECT * FROM t WHERE a IS NULL AND b = 1;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list)
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))
      (where_clause
        (binary_expression
          (binary_expression
            (is_expression
              (qualified_identifier
                (identifier)))
            (qualified_identifier
              (identifier)))
          (integer))))))

================================================================================
BETWEEN vs AND precedence
================================================================================

SELECT * FROM t WHERE a BETWEEN 1 AND 10 AND b = 2;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list)
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))
      (where_clause
        (qualified_identifier
          (identifier)))))
  (ERROR
    (binary_expression
      (binary_expression
        (binary_expression
          (integer)
          (integer))
        (qualified_identifier
          (identifier)))
      (integer))))

================================================================================
NOT precedence with LIKE
================================================================================

SELECT * FROM t WHERE NOT a LIKE 'x%' AND b = 1;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list)
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))
      (where_clause
        (unary_expression
          (binary_expression
            (binary_expression
              (qualified_identifier
                (identifier))
              (binary_expression
                (string)
                (qualified_identifier
                  (identifier))))
            (integer)))))))

================================================================================
COLLATE in expression precedence
================================================================================

SELECT a COLLATE NOCASE = b FROM t;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (binary_expression
            (collate_expression
              (qualified_identifier
                (identifier))
              (identifier))
            (qualified_identifier
              (identifier)))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))))

================================================================================
Complex parenthesized precedence
================================================================================

SELECT (1 + 2) * (3 + 4) = 21;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (binary_expression
            (parenthesized_expression
              (binary_expression
                (integer)
                (integer)))
            (binary_expression
              (parenthesized_expression
                (binary_expression
                  (integer)
                  (integer)))
              (integer))))))))

================================================================================
OR vs AND precedence
================================================================================

SELECT * FROM t WHERE a = 1 AND b = 2 OR c = 3;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list)
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))
      (where_clause
        (binary_expression
          (binary_expression
            (binary_expression
              (qualified_identifier
                (identifier))
              (binary_expression
                (integer)
                (qualified_identifier
                  (identifier))))
            (binary_expression
              (integer)
              (qualified_identifier
                (identifier))))
          (integer))))))

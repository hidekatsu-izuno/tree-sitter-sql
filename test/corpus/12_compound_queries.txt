================================================================================
Basic UNION
================================================================================

SELECT id, name FROM customers
UNION
SELECT id, name FROM suppliers;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))))

================================================================================
UNION ALL
================================================================================

SELECT id, name, 'customer' AS type FROM customers
UNION ALL
SELECT id, company AS name, 'supplier' AS type FROM suppliers;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (string)
          (identifier)))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))
            (identifier))
          (result_column
            (string)
            (identifier)))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))))

================================================================================
INTERSECT
================================================================================

SELECT product_id FROM sales_2023
INTERSECT
SELECT product_id FROM sales_2024;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))))

================================================================================
EXCEPT
================================================================================

SELECT customer_id FROM customers
EXCEPT
SELECT customer_id FROM blacklisted_customers;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))))

================================================================================
Multiple UNION operations
================================================================================

SELECT id, name FROM customers
UNION
SELECT id, name FROM suppliers  
UNION ALL
SELECT id, brand_name AS name FROM brands
UNION
SELECT id, category_name AS name FROM categories;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))
            (identifier)))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))
            (identifier)))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))))

================================================================================
Compound query with ORDER BY
================================================================================

SELECT id, name, 'customer' AS type FROM customers
UNION ALL
SELECT id, company, 'supplier' AS type FROM suppliers
ORDER BY name ASC, type DESC;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (string)
          (identifier)))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (string)
            (identifier)))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))
    (order_by_clause
      (ordering_term
        (qualified_identifier
          (identifier)))
      (ordering_term
        (qualified_identifier
          (identifier))))))

================================================================================
Compound query with LIMIT
================================================================================

SELECT id, name FROM customers
UNION
SELECT id, name FROM suppliers
LIMIT 100 OFFSET 20;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))
    (limit_clause
      (integer)
      (integer))))

================================================================================
Parenthesized compound queries
================================================================================

(SELECT id, name FROM customers WHERE active = 1)
UNION
(SELECT id, name FROM suppliers WHERE verified = 1)
ORDER BY name;

--------------------------------------------------------------------------------

(source_file
  (ERROR)
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))
      (where_clause
        (binary_expression
          (qualified_identifier
            (identifier))
          (integer))))
    (ERROR)
    (compound_operator
      (ERROR)
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))
        (where_clause
          (binary_expression
            (qualified_identifier
              (identifier))
            (integer)))))
    (ERROR)
    (order_by_clause
      (ordering_term
        (qualified_identifier
          (identifier))))))

================================================================================
Complex mixed compound operations
================================================================================

SELECT id, name FROM customers
EXCEPT
SELECT id, name FROM inactive_customers
UNION ALL
SELECT id, company_name FROM suppliers
INTERSECT
SELECT id, entity_name FROM verified_entities;

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))))))

================================================================================
Compound query in subquery
================================================================================

SELECT * FROM products
WHERE category_id IN (
  SELECT id FROM popular_categories
  UNION
  SELECT id FROM trending_categories
);

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list)
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))
      (where_clause
        (in_expression
          (qualified_identifier
            (identifier))
          (select_statement
            (select_core
              (select_list
                (result_column
                  (qualified_identifier
                    (identifier))))
              (from_clause
                (table_or_subquery
                  (qualified_identifier
                    (identifier)))))
            (compound_operator
              (select_core
                (select_list
                  (result_column
                    (qualified_identifier
                      (identifier))))
                (from_clause
                  (table_or_subquery
                    (qualified_identifier
                      (identifier))))))))))))

================================================================================
Compound query with WITH clause
================================================================================

WITH regional_customers AS (
  SELECT * FROM customers WHERE region = 'North'
)
SELECT id, name FROM regional_customers
UNION ALL
SELECT id, name FROM suppliers WHERE region = 'North';

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (with_clause
      (common_table_expression
        (identifier)
        (select_statement
          (select_core
            (select_list)
            (from_clause
              (table_or_subquery
                (qualified_identifier
                  (identifier))))
            (where_clause
              (binary_expression
                (qualified_identifier
                  (identifier))
                (string)))))))
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier)))))
    (compound_operator
      (select_core
        (select_list
          (result_column
            (qualified_identifier
              (identifier)))
          (result_column
            (qualified_identifier
              (identifier))))
        (from_clause
          (table_or_subquery
            (qualified_identifier
              (identifier))))
        (where_clause
          (binary_expression
            (qualified_identifier
              (identifier))
            (string)))))))

================================================================================
VALUES clause as compound member
================================================================================

SELECT id, name FROM customers
UNION ALL
VALUES (999, 'System User'), (998, 'Admin User'), (997, 'Guest User');

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list
        (result_column
          (qualified_identifier
            (identifier)))
        (result_column
          (qualified_identifier
            (identifier))))
      (from_clause
        (table_or_subquery
          (qualified_identifier
            (identifier))))))
  (ERROR
    (identifier)
    (integer)
    (identifier)
    (identifier)
    (integer)
    (identifier)
    (identifier)
    (integer)
    (identifier)
    (identifier)))

================================================================================
Nested compound queries
================================================================================

SELECT * FROM (
  SELECT id, name FROM customers
  UNION
  SELECT id, company FROM suppliers
) AS entities
WHERE name LIKE 'A%'
UNION
SELECT * FROM (
  SELECT id, category_name AS name FROM categories
  UNION
  SELECT id, brand_name AS name FROM brands  
) AS names
WHERE name LIKE 'B%';

--------------------------------------------------------------------------------

(source_file
  (select_statement
    (select_core
      (select_list)
      (from_clause
        (table_or_subquery
          (select_statement
            (select_core
              (select_list
                (result_column
                  (qualified_identifier
                    (identifier)))
                (result_column
                  (qualified_identifier
                    (identifier))))
              (from_clause
                (table_or_subquery
                  (qualified_identifier
                    (identifier)))))
            (compound_operator
              (select_core
                (select_list
                  (result_column
                    (qualified_identifier
                      (identifier)))
                  (result_column
                    (qualified_identifier
                      (identifier))))
                (from_clause
                  (table_or_subquery
                    (qualified_identifier
                      (identifier)))))))
          (identifier)))
      (where_clause
        (binary_expression
          (qualified_identifier
            (identifier))
          (string))))
    (compound_operator
      (select_core
        (select_list)
        (from_clause
          (table_or_subquery
            (select_statement
              (select_core
                (select_list
                  (result_column
                    (qualified_identifier
                      (identifier)))
                  (result_column
                    (qualified_identifier
                      (identifier))
                    (identifier)))
                (from_clause
                  (table_or_subquery
                    (qualified_identifier
                      (identifier)))))
              (compound_operator
                (select_core
                  (select_list
                    (result_column
                      (qualified_identifier
                        (identifier)))
                    (result_column
                      (qualified_identifier
                        (identifier))
                      (identifier)))
                  (from_clause
                    (table_or_subquery
                      (qualified_identifier
                        (identifier)))))))
            (identifier)))
        (where_clause
          (binary_expression
            (qualified_identifier
              (identifier))
            (string)))))))
